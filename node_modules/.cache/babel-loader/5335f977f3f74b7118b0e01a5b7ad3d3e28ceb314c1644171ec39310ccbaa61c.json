{"ast":null,"code":"import axios from 'axios';\n// export const BASEURL = 'https://api.themoviedb.org/3';\nexport const BASEURL = 'http://www.omdbapi.com/?apikey=[yourkey]&';\nexport const IMAGEURL = 'https://image.tmdb.org/t/p/w780/';\nconst API_KEY = '?api_key=a8a4168eeeb623f39ee02028275e7a3e';\nexport const movies = axios.create({\n  baseURL: `${BASEURL}`\n});\nasync function getMoviesRequest(page) {\n  try {\n    let response = await movies.get(`/trending/movie/day${API_KEY}&page=${page}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n    if (axios.isCancel(error)) {\n      return Promise.reject();\n    } else {\n      console.log('Error', error);\n      return;\n    }\n  }\n}\nasync function getMoviesGenre() {\n  try {\n    let response = await movies.get(`/genre/movie/list${API_KEY}&language=en-US`);\n    return response.data.genres;\n  } catch (error) {\n    console.log(error);\n    if (axios.isCancel(error)) {\n      return Promise.reject();\n    } else {\n      console.log('Error', error);\n      return;\n    }\n  }\n}\nasync function getMovie(id) {\n  try {\n    let response = await movies.get(`/movie/${id}${API_KEY}&language=en-US`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    if (axios.isCancel(error)) {\n      return Promise.reject();\n    } else {\n      console.log('Error', error);\n      return;\n    }\n  }\n}\nasync function getCredits(id) {\n  try {\n    let response = await movies.get(`/movie/${id}/credits${API_KEY}&language=en-US`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    if (axios.isCancel(error)) {\n      return Promise.reject();\n    } else {\n      console.log('Error', error);\n      return;\n    }\n  }\n}\nasync function getImages(id) {\n  try {\n    let response = await movies.get(`/movie/${id}/images${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    if (axios.isCancel(error)) {\n      return Promise.reject();\n    } else {\n      console.log('Error', error);\n      return;\n    }\n  }\n}\nasync function getReviews(id) {\n  try {\n    let response = await movies.get(`/movie/${id}/reviews${API_KEY}&language=en-US`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n    if (axios.isCancel(error)) {\n      return Promise.reject();\n    } else {\n      console.log('Error', error);\n      return;\n    }\n  }\n}\nasync function getMoviesSearch(search, page) {\n  try {\n    let response = await movies.get(`/search/movie${API_KEY}&query=${search}&language=en-US&page=${page}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n    if (axios.isCancel(error)) {\n      return Promise.reject();\n    } else {\n      console.log('Error', error);\n      return;\n    }\n  }\n}\nexport { getMoviesRequest, getMoviesGenre, getMovie, getCredits, getImages, getReviews, getMoviesSearch };","map":{"version":3,"names":["axios","BASEURL","IMAGEURL","API_KEY","movies","create","baseURL","getMoviesRequest","page","response","get","data","results","error","console","log","isCancel","Promise","reject","getMoviesGenre","genres","getMovie","id","getCredits","getImages","getReviews","getMoviesSearch","search"],"sources":["/Users/yuradvornichenko/VSCode/omdbapiReact/src/API/APImovies.ts"],"sourcesContent":["import axios from 'axios';\n\nimport { moviesTypes } from '../types';\n\n// export const BASEURL = 'https://api.themoviedb.org/3';\nexport const BASEURL = 'http://www.omdbapi.com/?apikey=[yourkey]&';\nexport const IMAGEURL = 'https://image.tmdb.org/t/p/w780/';\n\nconst API_KEY = '?api_key=a8a4168eeeb623f39ee02028275e7a3e';\n\nexport const movies = axios.create({\n  baseURL: `${BASEURL}`,\n});\n\nasync function getMoviesRequest(\n  page: number\n): Promise<moviesTypes.MoviesItem[] | undefined> {\n  try {\n    let response = await movies.get(\n      `/trending/movie/day${API_KEY}&page=${page}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n    if (axios.isCancel(error)) {\n      return Promise.reject();\n    } else {\n      console.log('Error', error);\n      return;\n    }\n  }\n}\nasync function getMoviesGenre(): Promise<moviesTypes.GenresType[] | undefined> {\n  try {\n    let response = await movies.get(\n      `/genre/movie/list${API_KEY}&language=en-US`\n    );\n    return response.data.genres;\n  } catch (error) {\n    console.log(error);\n    if (axios.isCancel(error)) {\n      return Promise.reject();\n    } else {\n      console.log('Error', error);\n      return;\n    }\n  }\n}\nasync function getMovie(\n  id: string\n): Promise<moviesTypes.OneMovieType | undefined> {\n  try {\n    let response = await movies.get(`/movie/${id}${API_KEY}&language=en-US`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    if (axios.isCancel(error)) {\n      return Promise.reject();\n    } else {\n      console.log('Error', error);\n      return;\n    }\n  }\n}\n\nasync function getCredits(\n  id: string\n): Promise<moviesTypes.CreditsType | undefined> {\n  try {\n    let response = await movies.get(\n      `/movie/${id}/credits${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    if (axios.isCancel(error)) {\n      return Promise.reject();\n    } else {\n      console.log('Error', error);\n      return;\n    }\n  }\n}\nasync function getImages(\n  id: string\n): Promise<moviesTypes.ImagesType | undefined> {\n  try {\n    let response = await movies.get(`/movie/${id}/images${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    if (axios.isCancel(error)) {\n      return Promise.reject();\n    } else {\n      console.log('Error', error);\n      return;\n    }\n  }\n}\n\nasync function getReviews(\n  id: string\n): Promise<moviesTypes.ReviewsType[] | undefined> {\n  try {\n    let response = await movies.get(\n      `/movie/${id}/reviews${API_KEY}&language=en-US`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n    if (axios.isCancel(error)) {\n      return Promise.reject();\n    } else {\n      console.log('Error', error);\n      return;\n    }\n  }\n}\n\nasync function getMoviesSearch(\n  search: string | null,\n  page: number\n): Promise<any> {\n  try {\n    let response = await movies.get(\n      `/search/movie${API_KEY}&query=${search}&language=en-US&page=${page}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n    if (axios.isCancel(error)) {\n      return Promise.reject();\n    } else {\n      console.log('Error', error);\n      return;\n    }\n  }\n}\n\nexport {\n  getMoviesRequest,\n  getMoviesGenre,\n  getMovie,\n  getCredits,\n  getImages,\n  getReviews,\n  getMoviesSearch,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}