{"ast":null,"code":"// import { moviesTypes } from '../../types';\n// import { CastItem, StarsRage } from '../';\n// import ContentMoviesText from './contentMoviesText/ContentMoviesText';\n\n// import styles from './ContentMovies.module.scss';\n\n// // interface ContentMoviesProps {\n// //   manualMovie: moviesTypes.OneMovieType;\n// //   credits: moviesTypes.CastTypes[];\n// // }\n\n// const ContentMovies: React.FC<ContentMoviesProps> = ({\n//   manualMovie,\n//   credits,\n// }) => {\n//   const releaseDate = manualMovie?.release_date.slice(0, 4);\n//   const rage = manualMovie?.vote_average.toFixed(1);\n//   const genres = manualMovie?.genres\n//     .map((item): string => item.name)\n//     .join(', ');\n//   const country = manualMovie?.production_countries\n//     .map((item): string => item.name)\n//     .join(', ');\n//   const hours = Math.trunc(manualMovie?.runtime / 60);\n//   const minutes = manualMovie?.runtime % 60;\n\n//   return (\n//     <div className={styles.containerContent}>\n//       <div className={styles.containerInformation}>\n//         <h1>{manualMovie?.title}</h1>\n\n//         <div className={styles.containerText}>\n//           <p className={styles.titleText}>Vote / Votes</p>\n//           <div className={styles.containerStars}>\n//             <StarsRage rage={rage} />\n//             <p className={styles.rate}>\n//               {rage !== '0.0' ? rage : 'No rate'}{' '}\n//               <span className={styles.spanCount}>\n//                 /{' '}\n//                 {manualMovie?.vote_count !== 0\n//                   ? manualMovie?.vote_count\n//                   : 'No count'}{' '}\n//               </span>\n//             </p>\n//           </div>\n//         </div>\n\n//         <ContentMoviesText title='Year' content={releaseDate} />\n//         <ContentMoviesText\n//           title='Original Title'\n//           content={manualMovie?.original_title}\n//         />\n//         <ContentMoviesText title='Genre' content={genres} />\n//         <ContentMoviesText title='Сountry' content={country} />\n//         <ContentMoviesText\n//           title='Time'\n//           content={`${hours} hours ${minutes} minutes`}\n//         />\n//         <ContentMoviesText\n//           title='Release'\n//           content={manualMovie?.release_date}\n//         />\n\n//         <div className={`${styles.containerText} ${styles.alineItemStart}`}>\n//           <p className={styles.titleText}>Cast</p>\n//           {credits.length !== 0 ? (\n//             <div className={styles.containerCast}>\n//               {credits.slice(0, 20).map(({ id, name }, index) => (\n//                 <CastItem\n//                   key={id}\n//                   name={name}\n//                   id={id}\n//                   index={index === credits.slice(0, 20).length - 1}\n//                 />\n//               ))}\n//             </div>\n//           ) : (\n//             '-'\n//           )}\n//         </div>\n\n//         <p className={styles.overview}>{manualMovie?.overview}</p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ContentMovies;","map":{"version":3,"names":[],"sources":["/Users/yuradvornichenko/VSCode/omdbapiReact/src/components/contentMovies/ContentMovies.tsx"],"sourcesContent":["// import { moviesTypes } from '../../types';\n// import { CastItem, StarsRage } from '../';\n// import ContentMoviesText from './contentMoviesText/ContentMoviesText';\n\n// import styles from './ContentMovies.module.scss';\n\n// // interface ContentMoviesProps {\n// //   manualMovie: moviesTypes.OneMovieType;\n// //   credits: moviesTypes.CastTypes[];\n// // }\n\n// const ContentMovies: React.FC<ContentMoviesProps> = ({\n//   manualMovie,\n//   credits,\n// }) => {\n//   const releaseDate = manualMovie?.release_date.slice(0, 4);\n//   const rage = manualMovie?.vote_average.toFixed(1);\n//   const genres = manualMovie?.genres\n//     .map((item): string => item.name)\n//     .join(', ');\n//   const country = manualMovie?.production_countries\n//     .map((item): string => item.name)\n//     .join(', ');\n//   const hours = Math.trunc(manualMovie?.runtime / 60);\n//   const minutes = manualMovie?.runtime % 60;\n\n//   return (\n//     <div className={styles.containerContent}>\n//       <div className={styles.containerInformation}>\n//         <h1>{manualMovie?.title}</h1>\n\n//         <div className={styles.containerText}>\n//           <p className={styles.titleText}>Vote / Votes</p>\n//           <div className={styles.containerStars}>\n//             <StarsRage rage={rage} />\n//             <p className={styles.rate}>\n//               {rage !== '0.0' ? rage : 'No rate'}{' '}\n//               <span className={styles.spanCount}>\n//                 /{' '}\n//                 {manualMovie?.vote_count !== 0\n//                   ? manualMovie?.vote_count\n//                   : 'No count'}{' '}\n//               </span>\n//             </p>\n//           </div>\n//         </div>\n\n//         <ContentMoviesText title='Year' content={releaseDate} />\n//         <ContentMoviesText\n//           title='Original Title'\n//           content={manualMovie?.original_title}\n//         />\n//         <ContentMoviesText title='Genre' content={genres} />\n//         <ContentMoviesText title='Сountry' content={country} />\n//         <ContentMoviesText\n//           title='Time'\n//           content={`${hours} hours ${minutes} minutes`}\n//         />\n//         <ContentMoviesText\n//           title='Release'\n//           content={manualMovie?.release_date}\n//         />\n\n//         <div className={`${styles.containerText} ${styles.alineItemStart}`}>\n//           <p className={styles.titleText}>Cast</p>\n//           {credits.length !== 0 ? (\n//             <div className={styles.containerCast}>\n//               {credits.slice(0, 20).map(({ id, name }, index) => (\n//                 <CastItem\n//                   key={id}\n//                   name={name}\n//                   id={id}\n//                   index={index === credits.slice(0, 20).length - 1}\n//                 />\n//               ))}\n//             </div>\n//           ) : (\n//             '-'\n//           )}\n//         </div>\n\n//         <p className={styles.overview}>{manualMovie?.overview}</p>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ContentMovies;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}