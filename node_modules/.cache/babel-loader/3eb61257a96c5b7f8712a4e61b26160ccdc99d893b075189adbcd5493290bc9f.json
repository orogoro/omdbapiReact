{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { fetchMovies, fetchOneMovie } from './operations';\nimport { moviesAction } from './action';\n// type MovieManualState = {\n//   movie: null | any;\n//   credits: any[];\n//   posters: any[];\n//   backImg: any[];\n//   reviews: any[];\n//   loading: boolean;\n// };\n\nconst initialState = {\n  data: [],\n  totalResults: null\n};\nconst moviesSearchReducer = createReducer(initialState, builder => {\n  builder.addCase(fetchMovies.fulfilled, (state, _ref) => {\n    let {\n      payload\n    } = _ref;\n    state.data = [...state.data, ...(payload === null || payload === void 0 ? void 0 : payload.Search)];\n    state.totalResults = Number(payload === null || payload === void 0 ? void 0 : payload.totalResults);\n  }).addCase(moviesAction, (state, _ref2) => {\n    let {\n      payload\n    } = _ref2;\n    state.data = payload;\n    state.totalResults = null;\n  });\n});\n\n// const isLoader = createReducer(false, (builder) => {\n//   builder\n//     .addCase(fetchMovies.pending, () => true)\n//     .addCase(fetchMovies.fulfilled, () => false)\n//     .addCase(fetchMovies.rejected, () => false);\n// });\n\nconst initialStateManual = {\n  movie: null,\n  loading: false\n};\nconst movieManualReducer = createReducer(initialStateManual, builder => {\n  builder.addCase(fetchOneMovie.fulfilled, (state, _ref3) => {\n    let {\n      payload\n    } = _ref3;\n    state.movie = payload;\n    state.loading = false;\n  }).addCase(fetchOneMovie.pending, state => {\n    state.loading = true;\n  }).addCase(fetchOneMovie.rejected, state => {\n    state.loading = false;\n  });\n});\nconst moviesReducer = combineReducers({\n  moviesSearchReducer\n  // movieManualReducer,\n  // isLoader,\n});\n\nexport { moviesReducer };","map":{"version":3,"names":["combineReducers","createReducer","fetchMovies","fetchOneMovie","moviesAction","initialState","data","totalResults","moviesSearchReducer","builder","addCase","fulfilled","state","_ref","payload","Search","Number","_ref2","initialStateManual","movie","loading","movieManualReducer","_ref3","pending","rejected","moviesReducer"],"sources":["/Users/yuradvornichenko/VSCode/omdbapiReact/src/redux/movies/reducer.ts"],"sourcesContent":["import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { fetchMovies, fetchOneMovie } from './operations';\nimport { moviesAction } from './action';\n\ntype MovieState = {\n  data: any[];\n  totalResults: number | null;\n};\n\n// type MovieManualState = {\n//   movie: null | any;\n//   credits: any[];\n//   posters: any[];\n//   backImg: any[];\n//   reviews: any[];\n//   loading: boolean;\n// };\n\nconst initialState: MovieState = {\n  data: [],\n  totalResults: null,\n};\n\nconst moviesSearchReducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(fetchMovies.fulfilled, (state, { payload }) => {\n      state.data = [...state.data, ...payload?.Search];\n      state.totalResults = Number(payload?.totalResults);\n    })\n    .addCase(moviesAction, (state, { payload }) => {\n      state.data = payload;\n      state.totalResults = null;\n    });\n});\n\n// const isLoader = createReducer(false, (builder) => {\n//   builder\n//     .addCase(fetchMovies.pending, () => true)\n//     .addCase(fetchMovies.fulfilled, () => false)\n//     .addCase(fetchMovies.rejected, () => false);\n// });\n\nconst initialStateManual: MovieManualState = {\n  movie: null,\n  loading: false,\n};\n\nconst movieManualReducer = createReducer(initialStateManual, (builder) => {\n  builder\n    .addCase(fetchOneMovie.fulfilled, (state, { payload }) => {\n      state.movie = payload;\n      state.loading = false;\n    })\n    .addCase(fetchOneMovie.pending, (state) => {\n      state.loading = true;\n    })\n    .addCase(fetchOneMovie.rejected, (state) => {\n      state.loading = false;\n    });\n});\n\nconst moviesReducer = combineReducers({\n  moviesSearchReducer,\n  // movieManualReducer,\n  // isLoader,\n});\n\nexport { moviesReducer };\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAO,uCAAuC;AAE9C,SAASC,WAAW,EAAEC,aAAa,QAAQ,cAAc;AACzD,SAASC,YAAY,QAAQ,UAAU;AAOvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAwB,GAAG;EAC/BC,IAAI,EAAE,EAAE;EACRC,YAAY,EAAE;AAChB,CAAC;AAED,MAAMC,mBAAmB,GAAGP,aAAa,CAACI,YAAY,EAAGI,OAAO,IAAK;EACnEA,OAAO,CACJC,OAAO,CAACR,WAAW,CAACS,SAAS,EAAE,CAACC,KAAK,EAAAC,IAAA,KAAkB;IAAA,IAAhB;MAAEC;IAAQ,CAAC,GAAAD,IAAA;IACjDD,KAAK,CAACN,IAAI,GAAG,CAAC,GAAGM,KAAK,CAACN,IAAI,EAAE,IAAGQ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,MAAM,EAAC;IAChDH,KAAK,CAACL,YAAY,GAAGS,MAAM,CAACF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEP,YAAY,CAAC;EACpD,CAAC,CAAC,CACDG,OAAO,CAACN,YAAY,EAAE,CAACQ,KAAK,EAAAK,KAAA,KAAkB;IAAA,IAAhB;MAAEH;IAAQ,CAAC,GAAAG,KAAA;IACxCL,KAAK,CAACN,IAAI,GAAGQ,OAAO;IACpBF,KAAK,CAACL,YAAY,GAAG,IAAI;EAC3B,CAAC,CAAC;AACN,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMW,kBAAoC,GAAG;EAC3CC,KAAK,EAAE,IAAI;EACXC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,kBAAkB,GAAGpB,aAAa,CAACiB,kBAAkB,EAAGT,OAAO,IAAK;EACxEA,OAAO,CACJC,OAAO,CAACP,aAAa,CAACQ,SAAS,EAAE,CAACC,KAAK,EAAAU,KAAA,KAAkB;IAAA,IAAhB;MAAER;IAAQ,CAAC,GAAAQ,KAAA;IACnDV,KAAK,CAACO,KAAK,GAAGL,OAAO;IACrBF,KAAK,CAACQ,OAAO,GAAG,KAAK;EACvB,CAAC,CAAC,CACDV,OAAO,CAACP,aAAa,CAACoB,OAAO,EAAGX,KAAK,IAAK;IACzCA,KAAK,CAACQ,OAAO,GAAG,IAAI;EACtB,CAAC,CAAC,CACDV,OAAO,CAACP,aAAa,CAACqB,QAAQ,EAAGZ,KAAK,IAAK;IAC1CA,KAAK,CAACQ,OAAO,GAAG,KAAK;EACvB,CAAC,CAAC;AACN,CAAC,CAAC;AAEF,MAAMK,aAAa,GAAGzB,eAAe,CAAC;EACpCQ;EACA;EACA;AACF,CAAC,CAAC;;AAEF,SAASiB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}