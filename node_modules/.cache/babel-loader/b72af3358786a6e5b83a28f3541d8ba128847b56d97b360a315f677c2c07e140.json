{"ast":null,"code":"var _jsxFileName = \"/Users/yuradvornichenko/VSCode/omdbapiReact/src/components/movies/Movies.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n// import { toast } from 'react-toastify';\n// // import { nanoid } from 'nanoid';\n\nimport { useAppDispatch, useAppSelector } from '../../redux/hook';\nimport { operations, selectors } from '../../redux/movies';\nimport { Loader, NotFound, ScrollToTop } from '../';\nimport styles from './Movies.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movies = () => {\n  _s();\n  const [page, setPage] = useState(1);\n  const [endFix] = useState(true);\n  const isLoader = useAppSelector(selectors.isLoader);\n  const movies = useAppSelector(selectors.getMovies);\n  console.log(isLoader);\n  //  const { query } = useParams();\n  const dispatch = useAppDispatch();\n  //  const prevQuery = useRef<string | null | undefined>(null);\n  //  const pageReff = useRef<number | null | undefined>(null);\n\n  useEffect(() => {\n    dispatch(operations.fetchMovies(1));\n  }, [dispatch]);\n\n  // useEffect(() => {\n  //   // async function fetchFilms() {\n  //   //   try {\n  //   //     // const results = await getMoviesSearch(query!, page);\n\n  //   //     if (results.length < 20) {\n  //   //       setEndFix(false);\n  //   //     }\n\n  //   //     if (results.length > 0) {\n  //   //       setMoviesSearch((prevState) => [...prevState, ...results]);\n  //   //       setLoading(false);\n  //   //     }\n\n  //   //     if (results.length === 0) {\n  //   //       toast.error('Not found');\n  //   //       setLoading(true);\n  //   //     }\n  //   //   } catch (error) {\n  //   //     console.log(error);\n  //   //   }\n  //   // }\n\n  //   // if (pageReff.current === page && prevQuery.current === query) {\n  //   //   return;\n  //   // }\n\n  //   // if (prevQuery.current !== query) {\n  //   //   setMoviesSearch([]);\n  //   //   setPage(1);\n  //   //   setEndFix(true);\n  //   // }\n\n  //   // if (prevQuery.current !== query && page === 1) {\n  //   //   pageReff.current = null;\n  //   // }\n\n  //   if (query && pageReff.current !== page) {\n  //     fetchFilms();\n  //   }\n\n  //   prevQuery.current = query;\n  //   pageReff.current = page;\n  // }, [query, page]);\n\n  const showNextMovies = () => {\n    if (movies.length !== 0) {\n      setPage(page + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [!isLoader && /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: movies.length,\n      next: showNextMovies,\n      hasMore: endFix,\n      scrollThreshold: 1,\n      loader: /*#__PURE__*/_jsxDEV(Loader, {\n        size: 70\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), isLoader && /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(ScrollToTop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(Movies, \"Uh2Ta2XNFShc8DbYpJ/rRIRlm/I=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppDispatch];\n});\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["useEffect","useState","InfiniteScroll","useAppDispatch","useAppSelector","operations","selectors","Loader","NotFound","ScrollToTop","styles","jsxDEV","_jsxDEV","Movies","_s","page","setPage","endFix","isLoader","movies","getMovies","console","log","dispatch","fetchMovies","showNextMovies","length","className","container","children","dataLength","next","hasMore","scrollThreshold","loader","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yuradvornichenko/VSCode/omdbapiReact/src/components/movies/Movies.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n// import { toast } from 'react-toastify';\n// // import { nanoid } from 'nanoid';\n\nimport { useAppDispatch, useAppSelector } from '../../redux/hook';\nimport { operations, selectors } from '../../redux/movies';\n\nimport { Loader, NotFound, ScrollToTop } from '../';\nimport styles from './Movies.module.scss';\n\nconst Movies: React.FC = () => {\n  const [page, setPage] = useState<number>(1);\n  const [endFix] = useState<boolean>(true);\n  const isLoader = useAppSelector(selectors.isLoader);\n  const movies = useAppSelector(selectors.getMovies);\n  console.log(isLoader);\n  //  const { query } = useParams();\n  const dispatch = useAppDispatch();\n  //  const prevQuery = useRef<string | null | undefined>(null);\n  //  const pageReff = useRef<number | null | undefined>(null);\n\n  useEffect(() => {\n    dispatch(operations.fetchMovies(1));\n  }, [dispatch]);\n\n  // useEffect(() => {\n  //   // async function fetchFilms() {\n  //   //   try {\n  //   //     // const results = await getMoviesSearch(query!, page);\n\n  //   //     if (results.length < 20) {\n  //   //       setEndFix(false);\n  //   //     }\n\n  //   //     if (results.length > 0) {\n  //   //       setMoviesSearch((prevState) => [...prevState, ...results]);\n  //   //       setLoading(false);\n  //   //     }\n\n  //   //     if (results.length === 0) {\n  //   //       toast.error('Not found');\n  //   //       setLoading(true);\n  //   //     }\n  //   //   } catch (error) {\n  //   //     console.log(error);\n  //   //   }\n  //   // }\n\n  //   // if (pageReff.current === page && prevQuery.current === query) {\n  //   //   return;\n  //   // }\n\n  //   // if (prevQuery.current !== query) {\n  //   //   setMoviesSearch([]);\n  //   //   setPage(1);\n  //   //   setEndFix(true);\n  //   // }\n\n  //   // if (prevQuery.current !== query && page === 1) {\n  //   //   pageReff.current = null;\n  //   // }\n\n  //   if (query && pageReff.current !== page) {\n  //     fetchFilms();\n  //   }\n\n  //   prevQuery.current = query;\n  //   pageReff.current = page;\n  // }, [query, page]);\n\n  const showNextMovies = () => {\n    if (movies.length !== 0) {\n      setPage(page + 1);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      {!isLoader && (\n        <InfiniteScroll\n          dataLength={movies.length}\n          next={showNextMovies}\n          hasMore={endFix}\n          scrollThreshold={1}\n          loader={<Loader size={70} />}\n        >\n          {/* <ul className={styles.list}>\n            {moviesSearch.map((item) => (\n              <MoviesItem\n                key={`${item.id}_${nanoid()}`}\n                data={item}\n                genres={genres}\n              />\n            ))}\n          </ul> */}\n        </InfiniteScroll>\n      )}\n      {isLoader && <NotFound />}\n      <ScrollToTop />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C;AACA,OAAOC,cAAc,MAAM,iCAAiC;AAC5D;AACA;;AAEA,SAASC,cAAc,EAAEC,cAAc,QAAQ,kBAAkB;AACjE,SAASC,UAAU,EAAEC,SAAS,QAAQ,oBAAoB;AAE1D,SAASC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,KAAK;AACnD,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,MAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAS,CAAC,CAAC;EAC3C,MAAM,CAACgB,MAAM,CAAC,GAAGhB,QAAQ,CAAU,IAAI,CAAC;EACxC,MAAMiB,QAAQ,GAAGd,cAAc,CAACE,SAAS,CAACY,QAAQ,CAAC;EACnD,MAAMC,MAAM,GAAGf,cAAc,CAACE,SAAS,CAACc,SAAS,CAAC;EAClDC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC;EACrB;EACA,MAAMK,QAAQ,GAAGpB,cAAc,EAAE;EACjC;EACA;;EAEAH,SAAS,CAAC,MAAM;IACduB,QAAQ,CAAClB,UAAU,CAACmB,WAAW,CAAC,CAAC,CAAC,CAAC;EACrC,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;;EAEd;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIN,MAAM,CAACO,MAAM,KAAK,CAAC,EAAE;MACvBV,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC;IACnB;EACF,CAAC;EAED,oBACEH,OAAA;IAAKe,SAAS,EAAEjB,MAAM,CAACkB,SAAU;IAAAC,QAAA,GAC9B,CAACX,QAAQ,iBACRN,OAAA,CAACV,cAAc;MACb4B,UAAU,EAAEX,MAAM,CAACO,MAAO;MAC1BK,IAAI,EAAEN,cAAe;MACrBO,OAAO,EAAEf,MAAO;MAChBgB,eAAe,EAAE,CAAE;MACnBC,MAAM,eAAEtB,OAAA,CAACL,MAAM;QAAC4B,IAAI,EAAE;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAI;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAYhC,EACArB,QAAQ,iBAAIN,OAAA,CAACJ,QAAQ;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACzB3B,OAAA,CAACH,WAAW;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACX;AAEV,CAAC;AAACzB,EAAA,CA3FID,MAAgB;EAAA,QAGHT,cAAc,EAChBA,cAAc,EAGZD,cAAc;AAAA;AAAAqC,EAAA,GAP3B3B,MAAgB;AA6FtB,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}