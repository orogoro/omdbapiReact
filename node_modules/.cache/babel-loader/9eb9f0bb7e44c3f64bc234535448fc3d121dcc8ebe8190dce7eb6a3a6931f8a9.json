{"ast":null,"code":"var _jsxFileName = \"/Users/yuradvornichenko/VSCode/omdbapiReact/src/components/contentMovies/contentMoviesImage/ContentMoviesImage.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { SliderPoster } from \"../../\";\nimport { IMAGEURL } from \"../../../API/APImovies\";\nimport noPicture from \"../../../images/noMovieFoto.png\";\nimport styles from \"./ContentMoviesImage.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContentMoviesImage = _ref => {\n  _s();\n  let {\n    manualMovie,\n    posters\n  } = _ref;\n  const [imagePoster, setImagePoster] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.containerImage,\n    children: [!imagePoster && /*#__PURE__*/_jsxDEV(\"img\", {\n      className: `${styles.image} `,\n      src: `${IMAGEURL}${manualMovie === null || manualMovie === void 0 ? void 0 : manualMovie.poster_path}`,\n      alt: manualMovie === null || manualMovie === void 0 ? void 0 : manualMovie.title,\n      onError: e => {\n        e.target.src = noPicture;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), imagePoster && /*#__PURE__*/_jsxDEV(\"img\", {\n      className: styles.image,\n      src: `${IMAGEURL}${imagePoster}`,\n      alt: manualMovie === null || manualMovie === void 0 ? void 0 : manualMovie.title,\n      onError: e => {\n        e.target.src = noPicture;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), posters && /*#__PURE__*/_jsxDEV(SliderPoster, {\n      images: posters,\n      setImagePoster: setImagePoster\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(ContentMoviesImage, \"oAMigt2pIj6iMFjnftpAz1d5UnU=\");\n_c = ContentMoviesImage;\nexport default ContentMoviesImage;\nvar _c;\n$RefreshReg$(_c, \"ContentMoviesImage\");","map":{"version":3,"names":["useState","SliderPoster","IMAGEURL","noPicture","styles","jsxDEV","_jsxDEV","ContentMoviesImage","_ref","_s","manualMovie","posters","imagePoster","setImagePoster","className","containerImage","children","image","src","poster_path","alt","title","onError","e","target","fileName","_jsxFileName","lineNumber","columnNumber","images","_c","$RefreshReg$"],"sources":["/Users/yuradvornichenko/VSCode/omdbapiReact/src/components/contentMovies/contentMoviesImage/ContentMoviesImage.tsx"],"sourcesContent":["import { useState } from \"react\";\n\nimport { moviesTypes } from \"../../../types\";\nimport { SliderPoster } from \"../../\";\n\nimport { IMAGEURL } from \"../../../API/APImovies\";\nimport noPicture from \"../../../images/noMovieFoto.png\";\n\nimport styles from \"./ContentMoviesImage.module.scss\";\n\ninterface ContentMoviesImageProps {\n  manualMovie: moviesTypes.OneMovieType;\n  posters: moviesTypes.ImagesArrayType[];\n}\n\nconst ContentMoviesImage: React.FC<ContentMoviesImageProps> = ({\n  manualMovie,\n  posters,\n}) => {\n  const [imagePoster, setImagePoster] = useState<string | null>(null);\n\n  return (\n    <div className={styles.containerImage}>\n      {!imagePoster && (\n        <img\n          className={`${styles.image} `}\n          src={`${IMAGEURL}${manualMovie?.poster_path}`}\n          alt={manualMovie?.title}\n          onError={(e: React.ChangeEvent<HTMLImageElement>): void => {\n            e.target.src = noPicture;\n          }}\n        />\n      )}\n      {imagePoster && (\n        <img\n          className={styles.image}\n          src={`${IMAGEURL}${imagePoster}`}\n          alt={manualMovie?.title}\n          onError={(e: React.ChangeEvent<HTMLImageElement>): void => {\n            e.target.src = noPicture;\n          }}\n        />\n      )}\n      {posters && (\n        <SliderPoster images={posters} setImagePoster={setImagePoster} />\n      )}\n    </div>\n  );\n};\n\nexport default ContentMoviesImage;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAGhC,SAASC,YAAY,QAAQ,QAAQ;AAErC,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,OAAOC,SAAS,MAAM,iCAAiC;AAEvD,OAAOC,MAAM,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOtD,MAAMC,kBAAqD,GAAGC,IAAA,IAGxD;EAAAC,EAAA;EAAA,IAHyD;IAC7DC,WAAW;IACXC;EACF,CAAC,GAAAH,IAAA;EACC,MAAM,CAACI,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAgB,IAAI,CAAC;EAEnE,oBACEM,OAAA;IAAKQ,SAAS,EAAEV,MAAM,CAACW,cAAe;IAAAC,QAAA,GACnC,CAACJ,WAAW,iBACXN,OAAA;MACEQ,SAAS,EAAG,GAAEV,MAAM,CAACa,KAAM,GAAG;MAC9BC,GAAG,EAAG,GAAEhB,QAAS,GAAEQ,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAES,WAAY,EAAE;MAC9CC,GAAG,EAAEV,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEW,KAAM;MACxBC,OAAO,EAAGC,CAAsC,IAAW;QACzDA,CAAC,CAACC,MAAM,CAACN,GAAG,GAAGf,SAAS;MAC1B;IAAE;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEL,EACAhB,WAAW,iBACVN,OAAA;MACEQ,SAAS,EAAEV,MAAM,CAACa,KAAM;MACxBC,GAAG,EAAG,GAAEhB,QAAS,GAAEU,WAAY,EAAE;MACjCQ,GAAG,EAAEV,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEW,KAAM;MACxBC,OAAO,EAAGC,CAAsC,IAAW;QACzDA,CAAC,CAACC,MAAM,CAACN,GAAG,GAAGf,SAAS;MAC1B;IAAE;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEL,EACAjB,OAAO,iBACNL,OAAA,CAACL,YAAY;MAAC4B,MAAM,EAAElB,OAAQ;MAACE,cAAc,EAAEA;IAAe;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC/D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV,CAAC;AAACnB,EAAA,CAjCIF,kBAAqD;AAAAuB,EAAA,GAArDvB,kBAAqD;AAmC3D,eAAeA,kBAAkB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}