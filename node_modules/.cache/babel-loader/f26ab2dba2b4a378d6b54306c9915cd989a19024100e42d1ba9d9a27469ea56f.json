{"ast":null,"code":"var _jsxFileName = \"/Users/yuradvornichenko/VSCode/omdbapiReact/src/components/movies/Movies.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useAppDispatch } from '../../redux/hook';\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n// import { nanoid } from \"nanoid\";\n\nimport { operations } from '../../redux/movies';\n\n// import { MoviesItem, Loader, ScrollToTop } from \"../\";\n\nimport styles from './Movies.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movies = () => {\n  _s();\n  // const moviesList = useAppSelector(selectors.getMovies);\n  // const genres = useAppSelector(selectors.getGenres);\n  const dispatch = useAppDispatch();\n  // const [page, setPage] = useState<number>(1);\n  // const pageLoaded = useRef<number | null>(null);\n\n  useEffect(() => {\n    // if (page === pageLoaded.current) {\n    //   return;\n    // }\n    // pageLoaded.current = page;\n\n    // if (page === 1 && moviesList.length !== 0) {\n    //   dispatch(action.moviesAction([]));\n    // }\n\n    // if (genres.length === 0) {\n    //   dispatch(operations.fetchGenre());\n    // }\n\n    dispatch(operations.fetchMovies(1));\n  }, [dispatch]);\n\n  // const showNextMovies = () => {\n  //   setPage(page + 1);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Movies, \"DKdeqxp2QYw2p6z8/ErYMRK/Ubo=\", false, function () {\n  return [useAppDispatch];\n});\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["useEffect","useAppDispatch","operations","styles","jsxDEV","_jsxDEV","Movies","_s","dispatch","fetchMovies","className","container","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yuradvornichenko/VSCode/omdbapiReact/src/components/movies/Movies.tsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useAppDispatch } from '../../redux/hook';\n// import InfiniteScroll from \"react-infinite-scroll-component\";\n// import { nanoid } from \"nanoid\";\n\nimport { operations } from '../../redux/movies';\n\n// import { MoviesItem, Loader, ScrollToTop } from \"../\";\n\nimport styles from './Movies.module.scss';\n\nconst Movies: React.FC = () => {\n  // const moviesList = useAppSelector(selectors.getMovies);\n  // const genres = useAppSelector(selectors.getGenres);\n  const dispatch = useAppDispatch();\n  // const [page, setPage] = useState<number>(1);\n  // const pageLoaded = useRef<number | null>(null);\n\n  useEffect(() => {\n    // if (page === pageLoaded.current) {\n    //   return;\n    // }\n    // pageLoaded.current = page;\n\n    // if (page === 1 && moviesList.length !== 0) {\n    //   dispatch(action.moviesAction([]));\n    // }\n\n    // if (genres.length === 0) {\n    //   dispatch(operations.fetchGenre());\n    // }\n\n    dispatch(operations.fetchMovies(1));\n  }, [dispatch]);\n\n  // const showNextMovies = () => {\n  //   setPage(page + 1);\n  // };\n\n  return (\n    <div className={styles.container}>\n      {/* <InfiniteScroll\n        dataLength={moviesList.length}\n        next={showNextMovies}\n        hasMore={moviesList.length < 20 ? false : true}\n        scrollThreshold={1}\n        loader={<Loader size={70} />}\n      >\n        <ul className={styles.list}>\n          {moviesList.map((item) => (\n            <MoviesItem\n              key={`${item.id}_${nanoid()}`}\n              data={item}\n              genres={genres}\n            />\n          ))}\n        </ul>\n      </InfiniteScroll>\n      <ScrollToTop /> */}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,cAAc,QAAQ,kBAAkB;AACjD;AACA;;AAEA,SAASC,UAAU,QAAQ,oBAAoB;;AAE/C;;AAEA,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,MAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B;EACA;EACA,MAAMC,QAAQ,GAAGP,cAAc,EAAE;EACjC;EACA;;EAEAD,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;;IAEAQ,QAAQ,CAACN,UAAU,CAACO,WAAW,CAAC,CAAC,CAAC,CAAC;EACrC,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;;EAEd;EACA;EACA;;EAEA,oBACEH,OAAA;IAAKK,SAAS,EAAEP,MAAM,CAACQ;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAmB3B;AAEV,CAAC;AAACR,EAAA,CAlDID,MAAgB;EAAA,QAGHL,cAAc;AAAA;AAAAe,EAAA,GAH3BV,MAAgB;AAoDtB,eAAeA,MAAM;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}