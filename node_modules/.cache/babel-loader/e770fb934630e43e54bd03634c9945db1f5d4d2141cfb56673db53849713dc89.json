{"ast":null,"code":"var _jsxFileName = \"/Users/yuradvornichenko/VSCode/omdbapiReact/src/components/moviesItem/MoviesItem.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n// import { IMAGEURL } from '../../API/APImovies';\n\nimport noPicture from '../../images/noMovieFoto.png';\nimport styles from './MoviesItem.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoviesItem = _ref => {\n  _s();\n  let {\n    data,\n    movies\n  } = _ref;\n  const [error, setError] = useState(false);\n  const location = useLocation();\n  const {\n    Poster,\n    Title,\n    Year,\n    imdbID\n  } = data;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    className: styles.item,\n    to: `/${imdbID}`,\n    state: {\n      form: {\n        location,\n        movies\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.containerImage,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: `${styles.image} ${error ? styles.errorPicture : ''}`,\n        src: Poster,\n        alt: Title,\n        onError: e => {\n          e.target.src = noPicture;\n          setError(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.containerText,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.title,\n        children: Title.length > 50 ? Title.slice(0, 45) + '...' : Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.year,\n        children: Year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(MoviesItem, \"3iyExPeB4wmaWFfVgMRAjY9FrCk=\", false, function () {\n  return [useLocation];\n});\n_c = MoviesItem;\nexport default MoviesItem;\nvar _c;\n$RefreshReg$(_c, \"MoviesItem\");","map":{"version":3,"names":["useState","Link","useLocation","noPicture","styles","jsxDEV","_jsxDEV","MoviesItem","_ref","_s","data","movies","error","setError","location","Poster","Title","Year","imdbID","className","item","to","state","form","children","containerImage","image","errorPicture","src","alt","onError","e","target","fileName","_jsxFileName","lineNumber","columnNumber","containerText","title","length","slice","year","_c","$RefreshReg$"],"sources":["/Users/yuradvornichenko/VSCode/omdbapiReact/src/components/moviesItem/MoviesItem.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { moviesTypes } from '../../types';\n// import { IMAGEURL } from '../../API/APImovies';\n\nimport noPicture from '../../images/noMovieFoto.png';\n\nimport styles from './MoviesItem.module.scss';\n\ninterface MoviesItemsProps {\n  data: moviesTypes.MoviesItem;\n  movies: number;\n}\n\nconst MoviesItem: React.FC<MoviesItemsProps> = ({ data, movies }) => {\n  const [error, setError] = useState<boolean>(false);\n  const location = useLocation();\n  const { Poster, Title, Year, imdbID } = data;\n\n  return (\n    <Link\n      className={styles.item}\n      to={`/${imdbID}`}\n      state={{ form: { location, movies } }}\n    >\n      <div className={styles.containerImage}>\n        <img\n          className={`${styles.image} ${error ? styles.errorPicture : ''}`}\n          src={Poster}\n          alt={Title}\n          onError={(e: React.ChangeEvent<HTMLImageElement>): void => {\n            e.target.src = noPicture;\n            setError(true);\n          }}\n        />\n      </div>\n      <div className={styles.containerText}>\n        <h2 className={styles.title}>\n          {Title.length > 50 ? Title.slice(0, 45) + '...' : Title}\n        </h2>\n        <p className={styles.year}>{Year}</p>\n      </div>\n    </Link>\n  );\n};\n\nexport default MoviesItem;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AAGpD;;AAEA,OAAOC,SAAS,MAAM,8BAA8B;AAEpD,OAAOC,MAAM,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO9C,MAAMC,UAAsC,GAAGC,IAAA,IAAsB;EAAAC,EAAA;EAAA,IAArB;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAAH,IAAA;EAC9D,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAU,KAAK,CAAC;EAClD,MAAMc,QAAQ,GAAGZ,WAAW,EAAE;EAC9B,MAAM;IAAEa,MAAM;IAAEC,KAAK;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAGR,IAAI;EAE5C,oBACEJ,OAAA,CAACL,IAAI;IACHkB,SAAS,EAAEf,MAAM,CAACgB,IAAK;IACvBC,EAAE,EAAG,IAAGH,MAAO,EAAE;IACjBI,KAAK,EAAE;MAAEC,IAAI,EAAE;QAAET,QAAQ;QAAEH;MAAO;IAAE,CAAE;IAAAa,QAAA,gBAEtClB,OAAA;MAAKa,SAAS,EAAEf,MAAM,CAACqB,cAAe;MAAAD,QAAA,eACpClB,OAAA;QACEa,SAAS,EAAG,GAAEf,MAAM,CAACsB,KAAM,IAAGd,KAAK,GAAGR,MAAM,CAACuB,YAAY,GAAG,EAAG,EAAE;QACjEC,GAAG,EAAEb,MAAO;QACZc,GAAG,EAAEb,KAAM;QACXc,OAAO,EAAGC,CAAsC,IAAW;UACzDA,CAAC,CAACC,MAAM,CAACJ,GAAG,GAAGzB,SAAS;UACxBU,QAAQ,CAAC,IAAI,CAAC;QAChB;MAAE;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eACN9B,OAAA;MAAKa,SAAS,EAAEf,MAAM,CAACiC,aAAc;MAAAb,QAAA,gBACnClB,OAAA;QAAIa,SAAS,EAAEf,MAAM,CAACkC,KAAM;QAAAd,QAAA,EACzBR,KAAK,CAACuB,MAAM,GAAG,EAAE,GAAGvB,KAAK,CAACwB,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,GAAGxB;MAAK;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACpD,eACL9B,OAAA;QAAGa,SAAS,EAAEf,MAAM,CAACqC,IAAK;QAAAjB,QAAA,EAAEP;MAAI;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEX,CAAC;AAAC3B,EAAA,CA9BIF,UAAsC;EAAA,QAEzBL,WAAW;AAAA;AAAAwC,EAAA,GAFxBnC,UAAsC;AAgC5C,eAAeA,UAAU;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}