{"ast":null,"code":"var _jsxFileName = \"/Users/yuradvornichenko/VSCode/omdbapiReact/src/components/movies/Movies.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { toast } from 'react-toastify';\n// // import { nanoid } from 'nanoid';\n\nimport { useAppDispatch, useAppSelector } from '../../redux/hook';\nimport { operations, selectors } from '../../redux/movies';\nimport { Loader, NotFound, ScrollToTop } from '../';\nimport styles from './Movies.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movies = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const currentSearch = searchParams.get('query');\n  const [page, setPage] = useState(1);\n  const [endFix, setEndFix] = useState(true);\n  const isLoader = useAppSelector(selectors.isLoader);\n  const totalResults = useAppSelector(selectors.getMoviesTotalResults);\n  const movies = useAppSelector(selectors.getMovies);\n  const dispatch = useAppDispatch();\n  //  const prevQuery = useRef<string | null | undefined>(null);\n  //  const pageReff = useRef<number | null | undefined>(null);\n\n  useEffect(() => {\n    if (movies.length === totalResults) {\n      setEndFix(false);\n      return;\n    }\n    if (movies.length === 0) {\n      toast.error('Not found');\n      return;\n    }\n    dispatch(operations.fetchMovies({\n      currentSearch,\n      page\n    }));\n  }, [dispatch, currentSearch, page]);\n\n  // useEffect(() => {\n  //   // async function fetchFilms() {\n  //   //   try {\n  //   //     // const results = await getMoviesSearch(query!, page);\n\n  //   //     if (results.length < 20) {\n  //   //       setEndFix(false);\n  //   //     }\n\n  //   //     if (results.length > 0) {\n  //   //       setMoviesSearch((prevState) => [...prevState, ...results]);\n  //   //       setLoading(false);\n  //   //     }\n\n  //   //     if (results.length === 0) {\n  //   //       toast.error('Not found');\n  //   //       setLoading(true);\n  //   //     }\n  //   //   } catch (error) {\n  //   //     console.log(error);\n  //   //   }\n  //   // }\n\n  //   // if (pageReff.current === page && prevQuery.current === query) {\n  //   //   return;\n  //   // }\n\n  //   // if (prevQuery.current !== query) {\n  //   //   setMoviesSearch([]);\n  //   //   setPage(1);\n  //   //   setEndFix(true);\n  //   // }\n\n  //   // if (prevQuery.current !== query && page === 1) {\n  //   //   pageReff.current = null;\n  //   // }\n\n  //   if (query && pageReff.current !== page) {\n  //     fetchFilms();\n  //   }\n\n  //   prevQuery.current = query;\n  //   pageReff.current = page;\n  // }, [query, page]);\n\n  const showNextMovies = () => {\n    if (movies.length !== 0) {\n      setPage(page + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [!isLoader && /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: movies.length,\n      next: showNextMovies,\n      hasMore: endFix,\n      scrollThreshold: 1,\n      loader: /*#__PURE__*/_jsxDEV(Loader, {\n        size: 70\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), isLoader && /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(ScrollToTop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Movies, \"pUTwvCO69UKnqqPRIn4FmQOJfuM=\", false, function () {\n  return [useSearchParams, useAppSelector, useAppSelector, useAppSelector, useAppDispatch];\n});\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["useEffect","useState","useSearchParams","InfiniteScroll","toast","useAppDispatch","useAppSelector","operations","selectors","Loader","NotFound","ScrollToTop","styles","jsxDEV","_jsxDEV","Movies","_s","searchParams","currentSearch","get","page","setPage","endFix","setEndFix","isLoader","totalResults","getMoviesTotalResults","movies","getMovies","dispatch","length","error","fetchMovies","showNextMovies","className","container","children","dataLength","next","hasMore","scrollThreshold","loader","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yuradvornichenko/VSCode/omdbapiReact/src/components/movies/Movies.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { toast } from 'react-toastify';\n// // import { nanoid } from 'nanoid';\n\nimport { useAppDispatch, useAppSelector } from '../../redux/hook';\nimport { operations, selectors } from '../../redux/movies';\n\nimport { Loader, NotFound, ScrollToTop } from '../';\nimport styles from './Movies.module.scss';\n\nconst Movies: React.FC = () => {\n  const [searchParams] = useSearchParams();\n  const currentSearch = searchParams.get('query');\n  const [page, setPage] = useState<number>(1);\n  const [endFix, setEndFix] = useState<boolean>(true);\n  const isLoader = useAppSelector(selectors.isLoader);\n  const totalResults = useAppSelector(selectors.getMoviesTotalResults);\n  const movies = useAppSelector(selectors.getMovies);\n  const dispatch = useAppDispatch();\n  //  const prevQuery = useRef<string | null | undefined>(null);\n  //  const pageReff = useRef<number | null | undefined>(null);\n\n  useEffect(() => {\n    if (movies.length === totalResults) {\n      setEndFix(false);\n      return;\n    }\n\n    if (movies.length === 0) {\n      toast.error('Not found');\n      return;\n    }\n\n    dispatch(operations.fetchMovies({ currentSearch, page }));\n  }, [dispatch, currentSearch, page]);\n\n  // useEffect(() => {\n  //   // async function fetchFilms() {\n  //   //   try {\n  //   //     // const results = await getMoviesSearch(query!, page);\n\n  //   //     if (results.length < 20) {\n  //   //       setEndFix(false);\n  //   //     }\n\n  //   //     if (results.length > 0) {\n  //   //       setMoviesSearch((prevState) => [...prevState, ...results]);\n  //   //       setLoading(false);\n  //   //     }\n\n  //   //     if (results.length === 0) {\n  //   //       toast.error('Not found');\n  //   //       setLoading(true);\n  //   //     }\n  //   //   } catch (error) {\n  //   //     console.log(error);\n  //   //   }\n  //   // }\n\n  //   // if (pageReff.current === page && prevQuery.current === query) {\n  //   //   return;\n  //   // }\n\n  //   // if (prevQuery.current !== query) {\n  //   //   setMoviesSearch([]);\n  //   //   setPage(1);\n  //   //   setEndFix(true);\n  //   // }\n\n  //   // if (prevQuery.current !== query && page === 1) {\n  //   //   pageReff.current = null;\n  //   // }\n\n  //   if (query && pageReff.current !== page) {\n  //     fetchFilms();\n  //   }\n\n  //   prevQuery.current = query;\n  //   pageReff.current = page;\n  // }, [query, page]);\n\n  const showNextMovies = () => {\n    if (movies.length !== 0) {\n      setPage(page + 1);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      {!isLoader && (\n        <InfiniteScroll\n          dataLength={movies.length}\n          next={showNextMovies}\n          hasMore={endFix}\n          scrollThreshold={1}\n          loader={<Loader size={70} />}\n        >\n          {/* <ul className={styles.list}>\n            {moviesSearch.map((item) => (\n              <MoviesItem\n                key={`${item.id}_${nanoid()}`}\n                data={item}\n                genres={genres}\n              />\n            ))}\n          </ul> */}\n        </InfiniteScroll>\n      )}\n      {isLoader && <NotFound />}\n      <ScrollToTop />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}