{"ast":null,"code":"// import { useState } from 'react';\n// import { Link } from 'react-router-dom';\n\n// // import { moviesTypes } from '../../types';\n// // import { IMAGEURL } from '../../API/APImovies';\n\n// import noPicture from '../../images/noMovieFoto.png';\n\n// import { StarsRage } from '../';\n\n// import styles from './MoviesItem.module.scss';\n\n// interface MoviesItemsProps {\n//   data: any\n// }\n\n// const MoviesItem: React.FC<MoviesItemsProps> = ({ data }) => {\n//   const [error, setError] = useState<boolean>(false);\n//   const {\n//     // poster_path,\n//     original_title,\n//     title,\n//     release_date,\n//     vote_average,\n//     // genre_ids,\n//     id,\n//   } = data;\n//   const releaseDate = release_date?.slice(0, 4);\n//   const rage = vote_average.toFixed(1);\n//   // const getGenres = genres.filter((item) => {\n//   //   return genre_ids.find((it) => item.id === it);\n//   // });\n//   // const nameGenres =\n//   //   getGenres.length > 3\n//   //     ? getGenres\n//   //         .slice(0, 3)\n//   //         .map((item) => item.name)\n//   //         .concat(['Other'])\n//   //         .join(', ')\n//   //     : getGenres.map((item) => item.name).join(', ');\n\n//   // return (\n//     <Link className={styles.item} to={`/${id}`}>\n//       <div className={styles.containerImage}>\n//         <img\n//           className={`${styles.image} ${error ? styles.errorPicture : ''}`}\n//           // src={`${IMAGEURL}${poster_path}`}\n//           alt={title || original_title}\n//           onError={(e: React.ChangeEvent<HTMLImageElement>): void => {\n//             e.target.src = noPicture;\n//             setError(true);\n//           }}\n//         />\n//       </div>\n//       <div className={styles.containerText}>\n//         <h2 className={styles.title}>\n//           {original_title.length > 50\n//             ? original_title.slice(0, 45) + '...'\n//             : original_title}\n//         </h2>\n//         {/* {nameGenres && (\n//           <div\n//             className={`${styles.containerGenre} ${\n//               original_title.length > 30 && styles.margin\n//             }`}\n//           >\n//             <p className={styles.genres}>{nameGenres}</p>\n//           </div>\n//         )} */}\n\n//         <div className={styles.containerRage}>\n//           <p>{releaseDate}</p>\n//           <div className={styles.containerStar}>\n//             <p className={styles.rage}>{rage !== '0.0' ? rage : 'No rate'}</p>\n//             <StarsRage rage={rage} />\n//           </div>\n//         </div>\n//       </div>\n//     </Link>\n//   );\n// };\n\n// export default MoviesItem;","map":{"version":3,"names":[],"sources":["/Users/yuradvornichenko/VSCode/omdbapiReact/src/components/moviesItem/MoviesItem.tsx"],"sourcesContent":["// import { useState } from 'react';\n// import { Link } from 'react-router-dom';\n\n// // import { moviesTypes } from '../../types';\n// // import { IMAGEURL } from '../../API/APImovies';\n\n// import noPicture from '../../images/noMovieFoto.png';\n\n// import { StarsRage } from '../';\n\n// import styles from './MoviesItem.module.scss';\n\n// interface MoviesItemsProps {\n//   data: any\n// }\n\n// const MoviesItem: React.FC<MoviesItemsProps> = ({ data }) => {\n//   const [error, setError] = useState<boolean>(false);\n//   const {\n//     // poster_path,\n//     original_title,\n//     title,\n//     release_date,\n//     vote_average,\n//     // genre_ids,\n//     id,\n//   } = data;\n//   const releaseDate = release_date?.slice(0, 4);\n//   const rage = vote_average.toFixed(1);\n//   // const getGenres = genres.filter((item) => {\n//   //   return genre_ids.find((it) => item.id === it);\n//   // });\n//   // const nameGenres =\n//   //   getGenres.length > 3\n//   //     ? getGenres\n//   //         .slice(0, 3)\n//   //         .map((item) => item.name)\n//   //         .concat(['Other'])\n//   //         .join(', ')\n//   //     : getGenres.map((item) => item.name).join(', ');\n\n//   // return (\n//     <Link className={styles.item} to={`/${id}`}>\n//       <div className={styles.containerImage}>\n//         <img\n//           className={`${styles.image} ${error ? styles.errorPicture : ''}`}\n//           // src={`${IMAGEURL}${poster_path}`}\n//           alt={title || original_title}\n//           onError={(e: React.ChangeEvent<HTMLImageElement>): void => {\n//             e.target.src = noPicture;\n//             setError(true);\n//           }}\n//         />\n//       </div>\n//       <div className={styles.containerText}>\n//         <h2 className={styles.title}>\n//           {original_title.length > 50\n//             ? original_title.slice(0, 45) + '...'\n//             : original_title}\n//         </h2>\n//         {/* {nameGenres && (\n//           <div\n//             className={`${styles.containerGenre} ${\n//               original_title.length > 30 && styles.margin\n//             }`}\n//           >\n//             <p className={styles.genres}>{nameGenres}</p>\n//           </div>\n//         )} */}\n\n//         <div className={styles.containerRage}>\n//           <p>{releaseDate}</p>\n//           <div className={styles.containerStar}>\n//             <p className={styles.rage}>{rage !== '0.0' ? rage : 'No rate'}</p>\n//             <StarsRage rage={rage} />\n//           </div>\n//         </div>\n//       </div>\n//     </Link>\n//   );\n// };\n\n// export default MoviesItem;\n"],"mappings":"AAAA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}