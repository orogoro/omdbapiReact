{"ast":null,"code":"var _jsxFileName = \"/Users/yuradvornichenko/VSCode/omdbapiReact/src/components/movies/Movies.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n// // import { nanoid } from 'nanoid';\n\nimport { useAppDispatch, useAppSelector } from '../../redux/hook';\nimport { operations, selectors, action } from '../../redux/movies';\nimport { Loader, NotFound, ScrollToTop, MoviesItem } from '../';\nimport styles from './Movies.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Movies = () => {\n  _s();\n  const [searchParams] = useSearchParams();\n  const currentSearch = searchParams.get('query');\n  const [page, setPage] = useState(1);\n  const [endFix, setEndFix] = useState(true);\n  const isLoader = useAppSelector(selectors.isLoader);\n  const totalResults = useAppSelector(selectors.getMoviesTotalResults);\n  const movies = useAppSelector(selectors.getMovies);\n  const dispatch = useAppDispatch();\n  const prevQuery = useRef(null);\n  const pageReff = useRef(null);\n  useEffect(() => {\n    if (pageReff.current === page && prevQuery.current === currentSearch) {\n      return;\n    }\n    if (movies.length === totalResults) {\n      setEndFix(false);\n      console.log('mnogo');\n    }\n    if (prevQuery.current !== currentSearch && pageReff.current !== null) {\n      console.log('moviesAction[]');\n      dispatch(action.moviesAction([]));\n      setPage(1);\n      setEndFix(true);\n    }\n    if (prevQuery.current !== currentSearch && page === 1) {\n      pageReff.current = null;\n    }\n    if (currentSearch && pageReff.current !== page) {\n      dispatch(operations.fetchMovies({\n        currentSearch,\n        page\n      }));\n    }\n    pageReff.current = page;\n    prevQuery.current = currentSearch;\n  }, [dispatch, currentSearch, page, movies, totalResults]);\n  const showNextMovies = () => {\n    if (movies.length !== 0) {\n      setPage(page + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(InfiniteScroll, {\n      dataLength: movies.length,\n      next: showNextMovies,\n      hasMore: endFix,\n      scrollThreshold: 1,\n      loader: /*#__PURE__*/_jsxDEV(Loader, {\n        size: 70\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.list,\n        children: movies.map(item => /*#__PURE__*/_jsxDEV(MoviesItem, {\n          data: item\n        }, item.imdbID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), isLoader && /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(ScrollToTop, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(Movies, \"hwBFjpByFNp0rnST/ltcguUuD3k=\", false, function () {\n  return [useSearchParams, useAppSelector, useAppSelector, useAppSelector, useAppDispatch];\n});\n_c = Movies;\nexport default Movies;\nvar _c;\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"names":["useEffect","useState","useRef","useSearchParams","InfiniteScroll","useAppDispatch","useAppSelector","operations","selectors","action","Loader","NotFound","ScrollToTop","MoviesItem","styles","jsxDEV","_jsxDEV","Movies","_s","searchParams","currentSearch","get","page","setPage","endFix","setEndFix","isLoader","totalResults","getMoviesTotalResults","movies","getMovies","dispatch","prevQuery","pageReff","current","length","console","log","moviesAction","fetchMovies","showNextMovies","className","container","children","dataLength","next","hasMore","scrollThreshold","loader","size","fileName","_jsxFileName","lineNumber","columnNumber","list","map","item","data","imdbID","_c","$RefreshReg$"],"sources":["/Users/yuradvornichenko/VSCode/omdbapiReact/src/components/movies/Movies.tsx"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n// // import { nanoid } from 'nanoid';\n\nimport { useAppDispatch, useAppSelector } from '../../redux/hook';\nimport { operations, selectors, action } from '../../redux/movies';\n\nimport { Loader, NotFound, ScrollToTop, MoviesItem } from '../';\nimport styles from './Movies.module.scss';\n\nconst Movies: React.FC = () => {\n  const [searchParams] = useSearchParams();\n  const currentSearch = searchParams.get('query');\n  const [page, setPage] = useState<number>(1);\n  const [endFix, setEndFix] = useState<boolean>(true);\n  const isLoader = useAppSelector(selectors.isLoader);\n  const totalResults = useAppSelector(selectors.getMoviesTotalResults);\n  const movies = useAppSelector(selectors.getMovies);\n  const dispatch = useAppDispatch();\n  const prevQuery = useRef<string | null | undefined>(null);\n  const pageReff = useRef<number | null | undefined>(null);\n\n  useEffect(() => {\n    if (pageReff.current === page && prevQuery.current === currentSearch) {\n      return;\n    }\n\n    if (movies.length === totalResults) {\n      setEndFix(false);\n      console.log('mnogo');\n    }\n\n    if (prevQuery.current !== currentSearch && pageReff.current !== null) {\n      console.log('moviesAction[]');\n      dispatch(action.moviesAction([]));\n      setPage(1);\n      setEndFix(true);\n    }\n\n    if (prevQuery.current !== currentSearch && page === 1) {\n      pageReff.current = null;\n    }\n\n    if (currentSearch && pageReff.current !== page) {\n      dispatch(operations.fetchMovies({ currentSearch, page }));\n    }\n\n    pageReff.current = page;\n    prevQuery.current = currentSearch;\n  }, [dispatch, currentSearch, page, movies, totalResults]);\n\n  const showNextMovies = () => {\n    if (movies.length !== 0) {\n      setPage(page + 1);\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <InfiniteScroll\n        dataLength={movies.length}\n        next={showNextMovies}\n        hasMore={endFix}\n        scrollThreshold={1}\n        loader={<Loader size={70} />}\n      >\n        <ul className={styles.list}>\n          {movies.map((item) => (\n            <MoviesItem key={item.imdbID} data={item} />\n          ))}\n        </ul>\n      </InfiniteScroll>\n      {isLoader && <NotFound />}\n      <ScrollToTop />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}